from smolagents import CodeAgent, DuckDuckGoSearchTool
from smolagents.models import LiteLLMModel
from dotenv import load_dotenv
from smolagents import Tool
import os

load_dotenv()


class ReadFile(Tool):
    name = "read_file"
    description = "Reads the content of a file"
    inputs = {
        "path": {"type": "string", "description": "The relative path of the file to read. Don't use .."}
    }
    output_type = "string"

    def forward(self, path):
        with open(path, 'r') as fin:
            return fin.read()
        
class ListDir(Tool):
    name = "list_dir"
    description = "List the files in the given directory"
    inputs = {
        "path": {"type": "string", "description": "The relative path to the current working directory. Don't use .."}
    }
    output_type = "string"

    def forward(self, path):
        return os.listdir(path)


model = LiteLLMModel(model_id="gemini/gemini-1.5-flash")
agent = CodeAgent(tools=[DuckDuckGoSearchTool(), ReadFile(), ListDir()], model=model)

print(agent.run("Read the content of the file README.md"))